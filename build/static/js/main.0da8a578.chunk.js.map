{"version":3,"sources":["Tabs.js","CountryList.js","Stats.js","App.js","reportWebVitals.js","index.js"],"names":["TabHeader","activeTab","tabNames","onTabChange","buttons","map","title","name","isActiveTab","style","backgroundColor","onClick","Tabs","initialTab","tabs","useState","setActiveTab","React","useMemo","tab","ActiveComponent","find","component","newTabName","CountryList","countries","flag","topLanguage","capital","height","width","src","alt","Stats","stats","count","App","rawCountries","setRawCountries","appLoading","setLoading","languages","allLanguages","lang","countryName","flat","langStats","forEach","language","languageKey","iso639_1","push","Object","values","sort","firstElement","secondElement","slice","useEffect","fetch","then","response","json","jsonData","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0da8a578.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\n\nconst TabHeader = ({\n  activeTab,\n  tabNames = [],\n  onTabChange\n}) => {\n  \n  const buttons = tabNames\n    .map(({ title, name }) => {\n      const isActiveTab = name === activeTab;\n      return (\n        <button\n          key={name}\n          style={{\n            backgroundColor: isActiveTab ? 'red' : 'gray'\n          }}\n          onClick={() =>onTabChange(name) }\n        >\n          {title}\n        </button>\n      )}\n    );\n    return (<div>\n      {buttons}\n    </div>)\n}\n\nconst Tabs = ({\n  initialTab,\n  tabs = []\n}) => {\n  const [activeTab, setActiveTab] = useState(initialTab || tabs[0].name);\n  const handleTabChange = (newTabName) => { setActiveTab(newTabName); };\n\n  const tabNames = React.useMemo(() => tabs.map((tab) => ({ name: tab.name, title: tab.title })), [tabs]);\n  \n  const activeTabObj = React.useMemo(() => tabs.find((tab) => tab.name === activeTab), [tabs, activeTab]);\n\n  const ActiveComponent = activeTabObj.component;\n\n  return (<>\n    <TabHeader\n      activeTab={activeTab}\n      tabNames={tabNames}\n      onTabChange={handleTabChange}\n    />\n    <div>\n      <ActiveComponent />\n    </div>\n  </>)\n  \n};\n\nexport default Tabs;","import React from 'react';\n\nconst CountryList = ({ countries = [] }) => {\n  return (<div>\n    Country List\n    {countries.map(({ name, flag, topLanguage, capital }) => {\n      return (<div key={name}>\n        {name}\n        <img\n          style={{ height: 20, width: 20 }}\n          src={flag}\n          alt={`Flag of ${name}`}\n        />\n        {`Top Language: ${topLanguage}`}\n        {`Capital: ${capital}`}\n      </div>);\n    })}\n  </div>)\n}\n\nexport default CountryList;","import React from 'react';\n\nconst Stats = ({ stats = [] }) => {\n  return (<div>\n    Most Spoken Languages\n    {stats.map(({ name, count }) => {\n      return (<div key={name}>\n        {name}\n          - \n        {count}\n      </div>);\n    })}\n  </div>)\n}\n\nexport default Stats;","import './App.css';\nimport Tabs from './Tabs';\nimport CountryList from './CountryList';\nimport React, { useEffect, useState } from 'react';\nimport Stats from './Stats';\n\nconst API_URL = 'https://restcountries.eu/rest/v2/all';\n\nfunction App() {\n  const [rawCountries, setRawCountries] = useState([]);\n  const [appLoading, setLoading] = useState(true);\n\n  const countries = React.useMemo(() => \n    rawCountries.map(({ name, flag, capital, languages }) => (\n      { name, flag, capital, topLanguage: languages[0].name }\n    )) , [rawCountries]\n  );\n\n  const stats = React.useMemo(() => {\n    const allLanguages = rawCountries.map(({ languages, name }) => languages.map((lang) =>({ ...lang, countryName: name }))).flat()\n    const langStats = { };\n\n    allLanguages.forEach((language) => {\n      const languageKey = language.iso639_1;\n      if (!langStats[languageKey]) {\n        langStats[languageKey] = {\n          count: 0,\n          countries: [],\n          name: language.name\n        }\n      }\n      langStats[languageKey].count += 1;\n      langStats[languageKey].countries.push(language.countryName);\n    });\n\n    const mostSpokenLanguges = Object.values(langStats)\n      .sort((firstElement, secondElement) => (secondElement.count - firstElement.count))// Sorted by count DESC\n      .slice(0, 10); \n\n    return mostSpokenLanguges;\n  }, [rawCountries]);\n\n  const tabs = [\n    { name: 'countries',\n      title: 'Countries',\n      component: () => (<CountryList countries={countries} />) \n    },\n    { \n      name: 'stats',\n    title: 'Stats',\n    component: () => (<Stats stats={stats} />) \n    },\n  ];\n\n\n  useEffect(() => {\n    fetch(API_URL).then((response) => {\n      response.json().then((jsonData) => {\n        setRawCountries(jsonData);\n        setLoading(false);\n      })\n    })\n  }, []);\n\n  if (appLoading) {\n    return <div> App is Loading..</div>\n  }\n\n  return (\n      <div className=\"App\">\n        <Tabs\n          tabs={tabs}\n          initialTab={'countries'}\n        />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}